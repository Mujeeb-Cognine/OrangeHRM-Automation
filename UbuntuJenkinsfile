pipeline {
    agent any

    environment {
        CUSTOM_PYTHON_PATH = '/usr/bin/python3' // Assuming Python 3 is available on Ubuntu
        VIRTUAL_ENV = "${WORKSPACE}/env"
    }

    stages {
        stage('SCM Checkout') {
            steps {
                script {
                    // Your SCM checkout steps go here
                }
            }
        }

        stage('Setup') {
            steps {
                script {
                    // Update package list
                    sh 'apt-get update'

                    // Install python3-venv package
                    sh 'apt-get install -y python3-venv'

                    // Create a virtual environment
                    sh "${CUSTOM_PYTHON_PATH} -m venv ${VIRTUAL_ENV}"

                    // Activate the virtual environment
                    sh "chmod +x ${VIRTUAL_ENV}/bin/activate"
                    sh ". ${VIRTUAL_ENV}/bin/activate"

                    // Install dependencies
                    sh "${VIRTUAL_ENV}/bin/pip install -r requirements.txt"

                    // Install chromedriver (if needed)
                    // sh "apt-get install -y chromium-chromedriver"
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run pytest with headless option
                    sh "${VIRTUAL_ENV}/bin/python -m pytest --junit-xml=report.xml"
                }
            }
        }
    }

    post {
        always {
            // Archive the test reports
            archiveArtifacts 'report.xml'
            junit 'report.xml'
        }
    }
}
